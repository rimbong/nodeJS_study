npm -> node package manage의 약자

https://www.npmjs.com/에 접속하여 필요한 모듈을 설치한다

npm init 
-> npm을 시작하겠다는 명령어

node index.js
-> index.js 실행

package.json
-> 설치된 모듈들을 정리한 파일 
    dependencies 여기서 확인 가능

package-lock.json
-> 좀 더 자세한 설명을 확인 할 수 있다.

node_modules
-> 설치한 node_module이 들어간다.

var figlet = require("figlet");
-> figlet 이라는 모듈을 사용하여 변수에 넣는다.

npm uninstall figlet
-> 모듈 제거
-------------------
nodeJS 프레임 워크 express
npm install express
-> express 설치

const express = require('express')
const app = express()
const port = 3000;

app.get('/', function (req, res) {
  res.send('Hello World')
})
->  get : http 메서드
    '/' : 라우팅, 접속시 받는 특정 URL 경로에 매칭 시켜준다.
    func: 콜백 함수

app.get('/cat', function (req, res) {
  res.json({'sound':'nya'});
})
->  res.json : send로 보내도 json 데이터가 가지만 명시적으로 json 함수를 사용한다.

app.get('/user/:id', function (req, res) {
  const p = req.params
  console.log(p);
  const q = req.query
  console.log(q);
  res.json({'userId' : p.id})
})
->  :id : 변수를 받아서 사용 할 경우 :id 와 같이 받으면 된다. 꺼낼때는 req.params 사용
    ?key=value : query String 형태로 받을 수도 있으며 req.query를 사용하며 값을 꺼낸다.

app.post('/user3/:id', function (req, res) {
    const q = req.params
    console.log(q);
    const b = req.body
    res.json({'userId' : q})
})
->  body : post의 경우 req.body로 post의 body를 받을 수 있다.

app.get('/sound/:name', function (req, res) {
    const {name} = req.params
    if (name == 'dog') {
        res.json({'sound' : 'dog'});
    } else {
        res.json({'sound' : 'etc'});
    }
})
->  name값에 따라 다른 소리를 내는 json API


app.listen(port, () => {
    console.log(1);
});
-> localhost:3000 으로 서버가 열린다.

-------------------------
cors 
-> 지정되지 않은 타 사이트 접근을 막는 것
npm install cors
-> cors 설치

var express = require('express')
var cors = require('cors')
var app = express()
const port = 3000;

app.use(cors())
-> app에 cors를 사용하겠다. 비워 놓으면 모든 요청에 대해 허용한다.

